#!/bin/bash
# ClubOS Complete Setup Script - Fixed Version
# This script sets up ClubOS with proper file organization

set -e  # Exit on error

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Functions
print_success() {
    echo -e "${GREEN}✅ $1${NC}"
}

print_error() {
    echo -e "${RED}❌ $1${NC}"
}

print_info() {
    echo -e "${YELLOW}ℹ️  $1${NC}"
}

print_step() {
    echo -e "${BLUE}🔧 $1${NC}"
}

# Check if running as root
check_root() {
    if [[ $EUID -eq 0 ]]; then
        print_error "This script should not be run as root!"
        print_info "Run as a regular user with sudo privileges"
        exit 1
    fi
}

# Check OS
check_os() {
    if [[ "$OSTYPE" != "linux-gnu"* ]]; then
        print_error "This script is designed for Linux systems"
        exit 1
    fi
}

# Main setup
main() {
    echo "🚀 Starting ClubOS Fixed Setup..."
    echo "=================================="
    
    check_root
    check_os
    
    # 0. File Organization
    print_step "Organizing project files..."
    
    # Create directories
    mkdir -p backend frontend scripts logs
    
    # Move files to correct locations (if they exist in wrong places)
    for file in main.py engine_foundation.py database.py schemas.py knowledge_base.py health.py bootstrap.py; do
        if [ -f "$file" ] && [ ! -f "backend/$file" ]; then
            mv "$file" backend/
            print_info "Moved $file to backend/"
        fi
    done
    
    if [ -f "index.html" ] && [ ! -f "frontend/index.html" ]; then
        mv index.html frontend/
        print_info "Moved index.html to frontend/"
    fi
    
    # Copy requirements.txt to backend if needed
    if [ -f "requirements.txt" ] && [ ! -f "backend/requirements.txt" ]; then
        cp requirements.txt backend/
    fi
    
    # Create __init__.py for Python package
    touch backend/__init__.py
    
    print_success "File organization complete"

    # 1. System Dependencies
    print_step "Installing system dependencies..."
    sudo apt update
    sudo apt install -y \
        python3.10 \
        python3-pip \
        python3-venv \
        postgresql \
        postgresql-contrib \
        nginx \
        git \
        curl \
        build-essential

    print_success "System dependencies installed"

    # 2. Python Environment
    print_step "Creating Python virtual environment..."
    
    if [ ! -d "venv" ]; then
        python3 -m venv venv
    fi
    
    source venv/bin/activate
    
    # Upgrade pip
    pip install --upgrade pip
    
    # Install Python dependencies
    if [ -f "backend/requirements.txt" ]; then
        print_info "Installing Python dependencies..."
        pip install -r backend/requirements.txt
        print_success "Python dependencies installed"
    else
        print_error "backend/requirements.txt not found!"
        exit 1
    fi

    # 3. Environment Configuration
    print_step "Setting up environment configuration..."
    
    # Create .env from example if it doesn't exist
    if [ ! -f ".env" ]; then
        if [ -f ".env.example" ]; then
            cp .env.example .env
            print_info "Created .env file from example"
        else
            # Create .env from scratch
            cat > .env << EOF
# ClubOS Environment Configuration
# Generated by setup script on $(date)

# OpenA
